- hosts: localhost
  connection: local
  tasks:
  - name: Generate key pair
    openssh_keypair:
      path: ~/.ssh/ansible_id_rsa
      state: present
  - name: Create key pair using key_material obtained using 'file' lookup plugin
    ec2_key:
      name: CloudFormationKeyPair
      key_material: "{{ lookup('file', '~/.ssh/ansible_id_rsa.pub') }}"
      state: present
  - name: Create a simple stack
    cloudformation:
      state: present
      stack_name: test-stack
      region: eu-west-2
      template: stack.yaml
  - cloudformation_info:
      stack_name: test-stack
      stack_resources: true
    register: output
  - ec2_instance_info:
      instance_ids: "{{ output['cloudformation']['test-stack']['stack_resource_list'] | json_query(query) }}"
    vars:
      query: "[?ResourceType=='AWS::EC2::Instance'].PhysicalResourceId"
    register: ec2
  - set_fact:
      ec2_instances: "{{ ec2['instances'] | map(attribute='public_dns_name') | list }}"
  - name: Build inventory
    add_host:
      name: "{{ item }}"
      ansible_user: ubuntu
      ansible_ssh_private_key_file: ~/.ssh/ansible_id_rsa
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o ConnectTimeout=60'
    with_items: "{{ ec2_instances }}"


- hosts: all
  become: true
  gather_facts: no
  tasks:
  - name: Wait for system to become reachable
    wait_for_connection:
  - name: Gather facts for first time
    setup:
  - name: Update local database
    apt:
     update_cache: true
  - name: Download dependencies
    apt:
      name: 
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      state: latest
      update_cache: true
  - name: docker gpg key
    apt_key:
      url: "https://download.docker.com/linux/ubuntu/gpg"
      state: present
  - name: docker apt repo
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/debian stretch stable"
      state: present
  - name: Update repositories
    apt:
      update_cache: true
  - name: Docker install
    apt:
      name: docker-ce
      state: latest
      update_cache: true
  - name: Enable docker systemd service
    service:
      name: docker
      state: started
      enabled: yes
  - name: Add user to docker group
    user:
      name: ubuntu
      groups: docker
      append: yes
  - name: Python pip
    apt:
      name: python3-pip
      state: latest
      update_cache: true
  - name: Docker compose
    pip:
      name: docker-compose
  - name: Install Git
    apt:
      name:
      - git
      state: latest
      update_cache: true
  - name: Git clone
    git:
      repo: "https://github.com/amoghvnaik/bookreviewsrepo.git"
      dest: "/home/ubuntu/bookreviewsrepo"
      force: yes
  - name: Create and start services
    docker_compose:
      project_src: bookreviewsrepo
